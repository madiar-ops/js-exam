// –ú–∞—Å—Å–∏–≤ –∑–∞–º–µ—Ç–æ–∫
let notes = [];

// –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–º–µ—Ç–æ–∫ –∏–∑ localStorage
function loadNotes() {
  const saved = localStorage.getItem('notes');
  if (saved) {
    notes = JSON.parse(saved);
  }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–º–µ—Ç–æ–∫ –≤ localStorage
function saveNotes() {
  localStorage.setItem('notes', JSON.stringify(notes));
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫
function renderNotes() {
  const notesList = document.getElementById('notes-list');
  const clearButton = document.getElementById('clear-all');
  notesList.innerHTML = '';

  if (notes.length === 0) {
    notesList.innerHTML = "<p class='empty-message'>–ù–µ—Ç –∑–∞–º–µ—Ç–æ–∫. –î–æ–±–∞–≤—å –ø–µ—Ä–≤—É—é!</p>";
    clearButton.style.display = 'none';
    return;
  }
  clearButton.style.display = 'inline-block';

  // 1. –°–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ –≤–≤–µ—Ä—Ö
  const sortedNotes = [...notes].sort((a, b) => b.pinned - a.pinned);

  sortedNotes.forEach((note, index) => {
    const noteCard = document.createElement('div');
    noteCard.className = 'note-card fade-in';
    noteCard.style.backgroundColor = note.color || '#1f2028';

    noteCard.innerHTML = `
      <h3>${note.title}</h3>
      <p>${note.content}</p>
       <div class="tags-container">
    ${note.tags.map(tag => `<span class="tag">${tag}</span>`).join('')}
  </div>
       <div class="note-actions">
       <small class="note-date">–î–æ–±–∞–≤–ª–µ–Ω–æ: ${note.createdAt}</small>
    <button class="pin-btn" onclick="togglePin(${index})">${note.pinned ? 'üìå –û—Ç–∫—Ä–µ–ø–∏—Ç—å' : 'üìç –ó–∞–∫—Ä–µ–ø–∏—Ç—å'}</button>
    <div class="color-picker">
      <div class="color-option" style="background:#ff6b6b;" onclick="setColor(${index}, '#ff6b6b')"></div>
      <div class="color-option" style="background:#2ecc71;" onclick="setColor(${index}, '#2ecc71')"></div>
      <div class="color-option" style="background:#3498db;" onclick="setColor(${index}, '#3498db')"></div>
      <div class="color-option" style="background:#f1c40f;" onclick="setColor(${index}, '#f1c40f')"></div>
      <div class="color-option" style="background:#9b59b6;" onclick="setColor(${index}, '#9b59b6')"></div>
    </div>
    <button class="delete-btn" onclick="deleteNote(${index})">‚úñ</button>
  </div>
`;

    notesList.appendChild(noteCard);
  });
}
function togglePin(index) {
  notes[index].pinned = !notes[index].pinned;
  saveNotes();
  renderNotes();
}


// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–º–µ—Ç–∫–∏
function addNote() {
  const titleInput = document.getElementById('note-title');
  const contentInput = document.getElementById('note-content');
  const tagsInput = document.getElementById('note-tags');

  const title = titleInput.value.trim();
  const content = contentInput.value.trim();
  const tags = tagsInput.value.split(',').map(tag => tag.trim()).filter(tag => tag !== '');




  if (title === '' || content === '') {
    alert('–ó–∞–ø–æ–ª–Ω–∏ –≤—Å–µ –ø–æ–ª—è!');
    return;
  }

  notes.push({ 
    title, 
    content, 
    pinned: false, 
    color: "#1f2028",
    createdAt: new Date().toLocaleString(),
    tags
  });
  
  saveNotes();
  renderNotes();

  titleInput.value = '';
  contentInput.value = '';
  tagsInput.value = '';
}

//–ö–Ω–æ–ø–∫–∞ –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ
document.getElementById('clear-all').addEventListener('click', clearAllNotes);

function clearAllNotes() {
  if (confirm('–¢—ã —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏? üöÄ')) {
    notes = [];
    saveNotes();
    renderNotes();
  }
}
function setColor(index, color) {
  notes[index].color = color;
  saveNotes();
  renderNotes();
}



// –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏
function deleteNote(index) {
  notes.splice(index, 1);
  saveNotes();
  renderNotes();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.getElementById('add-note').addEventListener('click', addNote);

// –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
loadNotes();
renderNotes();
